# -*- coding: utf-8 -*-
"""DAP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10GstfyxVlh9-1oAjEvUrwgst5ZStMb2D
"""

import numpy as np

#creating array
arr=np.array([1,2,3,4,5])
print(arr)

a=np.zeros((3,3),dtype=int)
print(a)

b=np.ones((2,2),dtype=int)
print(b)

c=np.arange(10)
print(c)

#array manipulation
d=arr.reshape(5,1)
print(d)

s_arr=arr[2:4]
print(s_arr)

#vstack
b1=np.array([1,2,3,4])
b2=np.array([2,6,8,9])
print(np.vstack(b1+b2))
print(np.stack(b1+b2))

#split
print(np.split(b1,2))

#mathematical operations
a1=np.array([1,3,5])
a2=np.array([2,4,6])
print(a1+a2)

#transpose of matrix
a5=np.array([[1,6],[7,9]])
print(a5)
print(a5.T)

#broadcasting
a3=a1+3
print(a3)

#dot product
arr1=np.array([[1,2],[3,4]])
arr2=np.array([[3,4],[5,6]])
arr3=np.dot(arr1,arr2)
print(arr3)
#sum in column and row wise
ar1=np.array([[1,4,3],[2,4,6]])
ar2=np.array([[2,6,7],[3,5,8]])
print(np.sum(ar1))
print(np.sum(ar1,axis=0))
print(np.sum(ar1,axis=1))
import matplotlib.pyplot as plt
import numpy as np
a=np.array([1,2,3,4,5,6,7,8,9])
plt.plot(a,linestyle='dotted',color='r',marker='o',ms=10)
plt.title('graph')
plt.ylabel('yaxis')
plt.xlabel('xaxis')
#eigen value and wigen vector
d=np.linalg.eig(arr3)
print(d)

import pandas as pd
a=["kiran","sai","rahul","akhil",'dhanush']
r=pd.Series(a,index=[1,23,3,45,6])
print(r)
print("___________________________________")
import pandas as pd
d=pd.read_csv("/content/archive (1).zip")
print(d)
#shape
d.shape
d1=d.tail(10)

import pandas as pd
e=pd.read_csv("/content/test.csv")
print(e)
e.shape
e_last_10=e.tail(10)
e_first_10=e.head(10)
for i in range(515,505,-1):
  e.drop([i],axis=0,inplace=True)
for i in range(10,0,-1):
  e.drop([i],axis=0,inplace=True)
data=pd.concat([e_first_10,e_last_10],axis=0)
data.to_csv("manual_testing.csv")
print(pd.read_csv("/content/manual_testing.csv"))
#f=(manual_testing.groupby(['description_x'])['same_security'].count())
#print(f)

df=pd.read_excel("/content/Cola.xlsx")
print(df)
df.shape

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import matplotlib.pyplot as plt
runs=np.array([100,50,91,78,89,25,34,19,9,10])
w=np.array([1,0,2,0,3,7,8,9,7,5])
plt.scatter(runs,w,color='orange')
plt.title('IndvsAus_score')
plt.xlabel('x-axis')
plt.ylabel('y-axis')
plt.show()

t=np.linspace(-2*np.pi,2*np.pi,100)
print(t)
#plt.plot(x,y,color,labels...)
plt.plot(t,np.sin(t),color='red')
plt.title('sin(x)')
plt.xlabel('t values')
plt.ylabel('sin(t)')
plt.scatter(t,np.sin(t),color='red')
plt.show()

#creating x
overs=np.arange(5,50,5)
overs1=np.arange(5,30,5)
#creating y
runs_i=np.array([25,51,84,131,160,189,220,250,267])
runs_a=np.array([15,41,94,110,151])
wickets=np.array([12,32,96])
plt.subplot(2,1,2)
plt.plot(overs,runs_i,color='blue',label='India')
plt.subplot(2,1,1)
plt.plot(overs1,runs_a,color='orange',label='Aus')
plt.legend(loc='best')
plt.show()

a=[230,560,780,127,128]
b=[200,160,270,127,400]
years=[1,2,3,4]
p_a=[(a[i]-a[i-1]) for i in range(1,len(a))]
p_b=[(b[i]-b[i-1]) for i in range(1,len(b))]
plt.subplot(2,1,2)
plt.plot(years,p_a,color='hotpink',linewidth='3',label='CompanyA',marker='>',ms='15',mec='k')
plt.subplot(2,1,1)
plt.plot(years,p_b,color='black',linestyle='dotted',label='CompanyB',marker='H')

a=np.array([25,60,5,10])
labe=["AIML","Python","Pandas","Numpy"]
explo=[0.2,0,0,0]
c=["pink","orange","red","black"]
plt.pie(a,labels=labe)
plt.show()
plt.pie(a,labels=labe,explode=explo,colors=c,startangle=180,textprops={'fontsize':20})
#plt.title('python',fontsize=16)
plt.show()

#!pip install seaborn
#14-02-2024
import seaborn as sns
import matplotlib.pyplot as plt
#Built_in Data_sets
tips=sns.load_dataset("iris")
print(tips)
sns.scatterplot(x="sepal_length",y="petal_length",data=tips)
plt.title("scatter plot of sepal_length vs petal_length")
plt.xlabel("sepal_length")
plt.ylabel("petal_length")
plt.show()

tips=sns.load_dataset("exercise")
print(tips)
sns.scatterplot(x="id",y="pulse",data=tips)
plt.title("scatter plot of id vs pulse")
plt.xlabel("id")
plt.ylabel("pulse")
plt.show()

tips=sns.load_dataset("exercise")
print(tips)
#same above programm(violinplot)
sns.violinplot(x="id",y="pulse",data=tips)
plt.title("scatter plot of id vs pulse")
plt.xlabel("id")
plt.ylabel("pulse")
plt.show()

#Heatmap
iris=sns.load_dataset("iris")
print(iris)
correlation_matrix=iris.corr()
sns.heatmap(correlation_matrix,annot=True,cmap='coolwarm')
plt.title("correlation Heatmap of Iris Dataset")
plt.show()

planet=sns.load_dataset("planets")
print(planet)
correlation_matrix=planet.corr()
sns.heatmap(correlation_matrix,annot=True,cmap='coolwarm')
plt.title("correlation Heatmap of planet Dataset")
plt.show()